FEATURES
{
  
}

SYMBOLS
{
  __PRG_NUM__:      type = weak, value = 2;
  __CHR_NUM__:      type = weak, value = 1;
  __MIRRORING__:    type = weak, value = 1;
  __HAS_SRAM__:     type = weak, value = 1;
  __MAPPER_NUM__:   type = weak, value = 0;
  
  __STACKSIZE__:    type = weak, value = $800; # 2k stack.
}

MEMORY
{
  ZP:      file = "", define = yes, start = $0000,          size = $100;
  #CPUSTACK:file = "", define = yes, start = $0100,          size = $100;
  SPRAM:   file = "", define = yes, start = $0200,          size = $100;
  RAM:     file = "", define = yes, start = $0300,          size = $500;
  WRAM:    file = "", define = yes, start = $6000,          size = $2000 - __STACKSIZE__;
  STACK:   file = "", define = yes, start = __WRAM_LAST__,  size = __STACKSIZE__;
  HEADER:  file = %O, define = yes, start = $7ff0,          size = $10,        fill = yes;
  PRG:     file = %O, define = yes, start = $8000,          size = $8000 - $6, fill = yes;
  VECTORS: file = %O, define = yes, start = $fff0,          size = $6,         fill = yes;
  CHR0:    file = %O, define = yes, start = $10000,         size = $1000,      fill = yes, fillval = $aa;
  CHR1:    file = %O, define = yes, start = $11000,         size = $1000,      fill = yes, fillval = $aa;
}

SEGMENTS
{
  ZEROPAGE: load = ZP,             type = zp,                optional = yes;
  HEADER:   load = HEADER,         type = ro;
  CODE:     load = PRG,            type = ro,  define = yes;
  RODATA:   load = PRG,            type = ro,  define = yes;
  VECTORS:  load = VECTORS,        type = ro;
  CHARS0:   load = CHR0,           type = ro,                optional = yes;
  CHARS1:   load = CHR1,           type = ro,                optional = yes;
  BSS:      load = RAM,            type = bss, define = yes;
  DATA:     load = PRG, run = RAM, type = rw,  define = yes;
  STACK:    load = STACK,          type = bss,               optional = yes;
}
